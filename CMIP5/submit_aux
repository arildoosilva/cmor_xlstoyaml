#!/bin/bash -eu
#help#
#***********************************************************************#
#                                                                       #
#     Name:           submit_aux                                        #
#                                                                       #
#     Function:       This script submits the cmip5 post-processing     #
#                     script to the aux nodes queue.                    #
#                                                                       #
#     Date:           July 19th, 2012.                                  #
#     Last change:    July 27th, 2012.                                  #
#                                                                       #
#     Valid Arguments for submit_nodes:                                 #
#                                                                       #
#     First:       START: Input dir with model output                   #
#                                                                       #
#***********************************************************************#
#help#

source ./cmip5_functions

OFFSET=0
OPTIND=1
while getopts "o:" opt; do
  case $opt in
    o)  
      OFFSET=$OPTARG
      ;;  
    \?) 
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;  
    :)  
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;  
  esac
done

shift $((OPTIND-1))

if [ "${1}" = "help" -o -z "${1}" ]
  then cat < ${0} | sed -n '/^#help#/,/^#help#/p'
exit 0
fi

INPUT_DIR=$1

RUNTM=`date +'%d_%H:%M'`

PYTHON=/stornext/online2/ocean/software/Envs/science/bin/python
#PYTHON=/scratchin/grupos/ocean/home/ocean/software/science2/bin/python
SCRIPT=$(readlink -e `dirname $0`)

EXP_PROPS=$(echo $INPUT_DIR | sed "s/[^ ]*simulations\/\(.*\)/\1/g")
EXP=`echo $EXP_PROPS | cut -d '/' -f1`
YEAR=`echo $EXP_PROPS | cut -d '/' -f4 | cut -c 3-`
IC=`echo $EXP_PROPS | cut -d '/' -f5`
REALM=`echo $EXP_PROPS | cut -d '/' -f6`
PHYSICS=`[[ $FIXED =~ $EXP ]] && echo '2' || [[ $MAUNA =~ $EXP ]] && echo '1' || [[ $RCP45 =~ $EXP ]] && echo '3' || [[ $RCP85 =~ $EXP ]] && echo '4'`
DURATION=`[[ "cmp034 cmp035 cmp036 cmp037 cmp038 cmp039 cmp040 cmp041 cmp042 cmp043 cmp044 cmp045" =~ $EXP ]] && echo '100' || echo '30'`

START=$(date -d "$[$YEAR+1]0101 +${OFFSET} months" +%Y/%m)
START_YEAR=$(echo $START | cut -d "/" -f1)
START_MONTH=$(echo $START | cut -d "/" -f2)
END=$[$YEAR+$DURATION]
NAME=decadal${YEAR}

NAME_UID=$(compose_cmip5_name $INPUT_DIR)
workdir=$SCRIPT/workdir
WORK_BASE=/scratchout/grupos/ocean/home/ocean/simulations

WORK_PATH=$WORK_BASE/$EXP_PROPS
#copy_cmip5_data "$INPUT_DIR" "$WORK_PATH" "$REALM" "$START" "$END"

mkdir -p $workdir/out

cat <<EOT0> ${workdir}/set_cmip5_process-${NAME_UID}
#!/bin/bash -eu
#PBS -o ${workdir}/out/${NAME_UID}.${RUNTM}.out.txt
#PBS -j oe
#PBS -q pesq.q@aux20-eth4
#PBS -S /bin/bash -eu
#PBS -V
#PBS -A CCST
#PBS -N ${NAME_UID}

. \${MODULESHOME}/init/bash

umask 027
runtimebegin=\`date +%s\`

#cd \$WORK_PATH
cd $INPUT_DIR

LD_LIBRARY_PATH=/stornext/online2/ocean/software/uuid-1.6.2/lib:/stornext/online2/ocean/software/udunits-2.1.24/lib:/stornext/online2/ocean/software/netcdf-4.1.3/lib:/opt/cray/hdf5/1.8.5.0/hdf5-gnu/lib
PATH=/stornext/online2/ocean/software/units-1.88/bin:\$PATH
#module load netcdf

echo "This is experiment $EXP, starting on $IC/12/$YEAR for $DURATION years."
echo "Processing data from $START_MONTH/$START_YEAR until the end."
echo "Physics used is $PHYSICS (1 is Mauna Loa, 2 is constant CO2, 3 is RCP4.5, 4 is RCP8.5)."

set +e
rm $workdir/out/${NAME_UID}.*.out 
set -e

for YYYY in \`seq -w $START_YEAR $END\`; do

    if [ \$YYYY = $START_YEAR ]
    then
      BM=$START_MONTH
    else
      BM=01
    fi

    for MONTH in \`seq -w \$BM 12\`; do 
        for TABLE in $TABLES; do
            echo "Processing table \$TABLE for \$YYYY/\$MONTH."
            $PYTHON $SCRIPT/$REALM.py $NAME $IC $PHYSICS $SCRIPT/\$TABLE \$YYYY \$MONTH  1>> $workdir/out/${NAME_UID}.\$TABLE.out 2>&1
        done
    done
done

runtimeend=\`date +%s\`
timebetween=\`echo "\${runtimeend}-\${runtimebegin}"|bc -l\`

echo "Tempo decorrido : \${timebetween} sec"
EOT0

chmod 740 ${workdir}/set_cmip5_process-${NAME_UID}

echo "qsub ${workdir}/set_cmip5_process-${NAME_UID}"
export JobIDcmip5=`qsub ${workdir}/set_cmip5_process-${NAME_UID}`
echo "JobIDcmip5: ${JobIDcmip5}"
